
- name: copy jenkins deployment files to host
  copy:
    src: "{{ item }}"
    dest: "{{ jenkins_dir.path }}"
  with_fileglob:
    - "{{ role_path }}/files/*"
  tags: "copy-jenkins-files"
  become: false





- name: get node-group ip
  shell: kubectl get nodes -o yaml | grep -- 'kubernetes.io/hostname' | sed  's/.*://'
  register: cluster_nodes
  tags: "get-info"
  become: false

- debug: msg="Nodes endpoints are {{ cluster_nodes.stdout }}"
  tags: "get-info"

- name: reset the variable
  ansible.builtin.set_fact:
    cluster_nodes: "{{ cluster_nodes.stdout }}"
  tags: "get-info"

# the jenkins-volume changes based on the cluster node 
# so a template is used to copy it over 

- name: copy jenkins-volume template over 
  template:
    src:  "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop: "{{ templates }}"
  tags: "copy-jenkins-files"



# => Deploy Jenkins On The Cluster
# _______________________________________________________ #


# it's important to create the namespace, volume, and service account first
# for the the deployment to work 
- name: Create jenkins namespace
  become: false
  tags: "deploy-jenkins"
  shell: kubectl apply -f /home/ubuntu/jenkins-files/namespace.yaml
  

- name: Create jenkins master volume
  become: false
  tags: "deploy-jenkins"
  shell: kubectl apply -f /home/ubuntu/jenkins-files/master-volume.yaml
  

- name: Create jenkins master service account
  become: false
  tags: "deploy-jenkins"
  shell: kubectl apply -f /home/ubuntu/jenkins-files/master-serviceAccount.yaml


- name: create the master and the agent deployment
  become: false
  tags: "deploy-jenkins"
  shell: kubectl apply -f /home/ubuntu/jenkins-files

- name: Get Jenkins' master URL
  become: false
  tags: "get-info"
  shell: kubectl -n jenkins describe svc jenkins-master | grep --  'LoadBalancer Ingress' | sed 's/.*://'
  register: jenkins_url


- debug: msg=" Jenkins URL is {{ jenkins_url.stdout }}"
  tags: "get-info"